# –°–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –¢–ì
# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–æ—Ç–æ –≥–∞—Ä–¥–µ—Ä–æ–±–∞:
# - –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ 1 –∏–ª–∏ –±–æ–ª–µ–µ
# - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ –≤–µ—â–µ–π –∏–∑ –≥–∞—Ä–¥–µ—Ä–æ–±–∞
# - –≤–∞—à —Å—Ç–∏–ª—å –∏—Ç–¥

import os
import traceback

import telebot
from dotenv import load_dotenv
from telebot import types

from ai_agent.ollama_agent import generate_outfit_with_ollama, analyze_clothing_item
from ai_agent.semantic_search import build_vector_store, search_similar_items, inspect_chroma_db
from database.sqlite_init import add_clothing_item, add_user, get_user_clothes, print_users_and_clothes

load_dotenv()

API_KEY = os.getenv('API_KEY')

bot = telebot.TeleBot(API_KEY, parse_mode=None)  # You can set parse_mode by default. HTML or MARKDOWN

SAVE_DIR = 'received_photos'
os.makedirs(SAVE_DIR, exist_ok=True)

user_states = {}
user_metadata = {}
STATE_SCENARIO_1_PHOTOS = 'scenario_1_photos'
STATE_SCENARIO_2_PROMPT = 'scenario_2_prompt'


def escape_markdown(text):
    escape_chars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
    for char in escape_chars:
        text = text.replace(char, f'\\{char}')
    return text


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")
    item2 = types.KeyboardButton("üëó –ü–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞–∑")

    markup.add(item1, item2)

    bot.send_message(
        message.chat.id,
        "‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª–∏—Å—Ç–∞! ‚ú®\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –∏–∑ –≤–∞—à–µ–≥–æ –≥–∞—Ä–¥–µ—Ä–æ–±–∞! üëó\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n"
        "üì∏ *–î–æ–±–∞–≤–∏—Ç—å –≤ –≥–∞—Ä–¥–µ—Ä–æ–±* ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã, —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à—É –∫–æ–ª–ª–µ–∫—Ü–∏—é.\n"
        "üëó *–ü–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞–∑ –æ—Ç –ò–ò* ‚Äî —É–∫–∞–∂–∏—Ç–µ –ø–æ–≤–æ–¥, –∏ —è –ø–æ–¥–±–µ—Ä—É —Å—Ç–∏–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –∏–∑ –≤–∞—à–∏—Ö –≤–µ—â–µ–π!",
        reply_markup=markup
    )


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    chat_id = message.chat.id
    username = message.from_user.username or "unknown"
    language = message.from_user.language_code or "unknown"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω—É–∂–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏
    if user_states.get(chat_id) != STATE_SCENARIO_1_PHOTOS:
        bot.send_message(chat_id, "üìå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π 1 –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ.")
        return

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ
    file_info = bot.get_file(message.photo[-1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –ø–∞–ø–∫–∏
    user_folder = os.path.join(SAVE_DIR, str(chat_id))
    os.makedirs(user_folder, exist_ok=True)

    # –ò–º—è –∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    filename = file_info.file_path.split('/')[-1]
    file_path = os.path.join(user_folder, filename)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open(file_path, 'wb') as new_file:
        new_file.write(downloaded_file)

    # –ê–Ω–∞–ª–∏–∑ –æ–¥–µ–∂–¥—ã
    try:
        item_metadata = analyze_clothing_item(file_path)
    except Exception as e:
        bot.send_message(chat_id, f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ: {e}")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–¥–µ–∂–¥—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    try:
        add_user(chat_id, username=username, language=language)
        add_clothing_item(
            user_id=chat_id,
            filename=filename,
            description=item_metadata.get("description", ""),
            season=", ".join(item_metadata.get("season", [])),
            sex=item_metadata.get("sex", ""),
            image_path=file_path
        )
        build_vector_store(chat_id)

        bot.send_message(chat_id, f"‚úÖ –§–æ—Ç–æ '{filename}' –¥–æ–±–∞–≤–ª–µ–Ω–æ, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")
    except Exception as db_err:
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –ë–î: {db_err}")

    inspect_chroma_db()
    print_users_and_clothes()


@bot.message_handler(func=lambda message: True)
def handle_user_input(message):
    chat_id = message.chat.id
    state = user_states.get(chat_id)

    # === –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ ===
    if message.text == "üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ":
        user_states[chat_id] = STATE_SCENARIO_1_PHOTOS
        bot.send_message(chat_id, "üì• –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –≤–∞—à–µ–π –æ–¥–µ–∂–¥—ã.")
        return
    elif message.text == "üëó –ü–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞–∑":
        user_states[chat_id] = STATE_SCENARIO_2_PROMPT
        bot.send_message(chat_id, "üìù –ù–∞ –∫–∞–∫–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å? –û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ.")
        return

    elif (state is None and not message.text.startswith('/') and message.content_type == 'text'):
        bot.send_message(chat_id, "‚ùóÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.")

    # === –°—Ü–µ–Ω–∞—Ä–∏–π 1: –§–æ—Ç–æ –æ–¥–µ–∂–¥—ã ===
    if state == STATE_SCENARIO_1_PHOTOS:
        if message.content_type != 'photo':
            bot.send_message(chat_id, "üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã.")
        return

    # === –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞ ===
    elif state == STATE_SCENARIO_2_PROMPT:
        print(user_metadata)
        prompt = message.text.strip()
        user_folder = os.path.join(SAVE_DIR, str(chat_id))

        if not os.path.exists(user_folder):
            bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–µ—â–µ–π. –°–Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –°—Ü–µ–Ω–∞—Ä–∏–µ–º 1.")
            return

        files = [f for f in os.listdir(user_folder) if f.endswith(('.png', '.jpg', '.jpeg'))]
        if len(files) < 2:
            bot.send_message(chat_id, f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–µ—â–µ–π –≤ –≥–∞—Ä–¥–µ—Ä–æ–±–µ (–Ω–∞–π–¥–µ–Ω–æ: {len(files)}). –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2.")
            return

        bot.send_message(chat_id, "üß† –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑...")

        try:

            # üìå –°–Ω–∞—á–∞–ª–∞ ‚Äî —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–µ—â–µ–π
            try:
                similar_items = search_similar_items(chat_id, prompt, top_k=5)
                selected_filenames = [item["filename"] for item in similar_items]
            except Exception as e:
                bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ–∏—Å–∫–µ –ø–æ—Ö–æ–∂–∏—Ö –≤–µ—â–µ–π: {e}")
                return

            if not selected_filenames:
                bot.send_message(chat_id, "üòï –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–µ—â–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É.")
                return

            # –ü–æ–ª—É—á–∞–µ–º –≤—Å—é –æ–¥–µ–∂–¥—É –∏–∑ –ë–î
            all_clothes = get_user_clothes(chat_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
            clothing_dict = {
                row[0]: {  # row[0] ‚Äî filename
                    "description": row[1],
                    "season": row[2].split(", ") if row[2] else [],
                    "sex": row[3],
                    "image_path": row[4]
                }
                for row in all_clothes
            }

            filtered_metadata = {
                fname: clothing_dict[fname]
                for fname in selected_filenames if fname in clothing_dict
            }

            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Ollama —É–∂–µ –ø–æ –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã–º –≤–µ—â–∞–º
            result = generate_outfit_with_ollama(prompt, selected_filenames, filtered_metadata)

            if not result:
                bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–∞.")
                return

            # –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞
            split_sections = result.split('---')
            outfit_block = split_sections[1].strip()
            advice_block = split_sections[2].strip()

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–∞ —Å –≤–µ—â–∞–º–∏
            if "‚ùå" in outfit_block:
                bot.send_message(chat_id, "üòï –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏ –æ–¥–Ω–∞ –∏–∑ –≤–µ—â–µ–π –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.")
            else:
                selected_files = []
                for line in outfit_block.splitlines():
                    line = line.strip()
                    if line.startswith("- ") and line[2:]:
                        selected_files.append(line[2:])

                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–µ—â–µ–π
                for filename in selected_files:
                    file_path = os.path.join(user_folder, filename)
                    if os.path.exists(file_path):
                        with open(file_path, "rb") as photo:
                            bot.send_photo(chat_id, photo)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–≤–µ—Ç–æ–≤
            bot.send_message(chat_id, f"üéØ *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç —Å—Ç–∏–ª–∏—Å—Ç–∞:*\n\n{advice_block}", parse_mode=None)

        except Exception as e:
            print(f"[Ollama error] {e}")
            traceback.print_exc()
            bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–∞.")

        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        user_states.pop(chat_id, None)
        return


bot.infinity_polling()
